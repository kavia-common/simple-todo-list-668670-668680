{"is_source_file": true, "format": "JavaScript", "description": "This file defines a React hook called useLocalStorage that synchronizes state with localStorage, including utility functions and the hook implementation.", "external_files": ["react"], "external_methods": ["useEffect", "useState", "useRef"], "published": ["useLocalStorage"], "classes": [], "methods": [{"name": "useLocalStorage(key, initialValue)", "description": "A React hook that manages state synced with localStorage, initializing from storage if available and updating storage on state change.", "scope": "", "scopeKind": ""}, {"name": "isBrowser()", "description": "Utility function to check if the code is running in a browser environment.", "scope": "", "scopeKind": ""}], "calls": ["isBrowser()", "window.localStorage.getItem", "window.localStorage.setItem", "JSON.parse", "JSON.stringify"], "search-terms": ["useLocalStorage", "React hook", "localStorage sync", "useEffect", "useState", "useRef", "browser environment check"], "state": 2, "file_id": 14, "knowledge_revision": 31, "git_revision": "", "ctags": [{"_type": "tag", "name": "isBrowser", "path": "/tmp/kavia/workspace/code-generation/simple-todo-list-668670-668680/todo_frontend/src/hooks/useLocalStorage.js", "pattern": "/^export function isBrowser() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "useLocalStorage", "path": "/tmp/kavia/workspace/code-generation/simple-todo-list-668670-668680/todo_frontend/src/hooks/useLocalStorage.js", "pattern": "/^export function useLocalStorage(key, initialValue) {$/", "language": "JavaScript", "kind": "function", "signature": "(key, initialValue)"}], "hash": "c23972c7147a279edc81fd6869474b53", "format-version": 4, "code-base-name": "todo_frontend", "filename": "todo_frontend/src/hooks/useLocalStorage.js", "revision_history": [{"31": ""}]}